// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Software_Engineering_Assingment.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20211214073553_AddInitialCreate")]
    partial class AddInitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Software_Engineering_Assingment.Models.Element", b =>
                {
                    b.Property<int>("ElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ActionTaken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Completed")
                        .HasColumnType("TEXT");

                    b.Property<int>("ElementHeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ElementSectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Interventions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReportId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ElementId");

                    b.HasIndex("ElementHeaderId");

                    b.HasIndex("ElementSectionId");

                    b.HasIndex("ReportId");

                    b.ToTable("Element");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.ElementHeader", b =>
                {
                    b.Property<int>("ElementHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ElementHeaderId");

                    b.ToTable("ElementHeader");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.ElementSection", b =>
                {
                    b.Property<int>("ElementSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ElementHeaderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ElementSectionId");

                    b.HasIndex("ElementHeaderId");

                    b.ToTable("ElementSection");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AdditionalComments")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("InspectorId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHighRiskActivity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SiteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkArea")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReportId");

                    b.HasIndex("SiteId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Report");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SiteId");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.Element", b =>
                {
                    b.HasOne("Software_Engineering_Assingment.Models.ElementHeader", "ElementHeader")
                        .WithMany()
                        .HasForeignKey("ElementHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Software_Engineering_Assingment.Models.ElementSection", "ElementSection")
                        .WithMany()
                        .HasForeignKey("ElementSectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Software_Engineering_Assingment.Models.Report", null)
                        .WithMany("Elements")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElementHeader");

                    b.Navigation("ElementSection");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.ElementSection", b =>
                {
                    b.HasOne("Software_Engineering_Assingment.Models.ElementHeader", null)
                        .WithMany("ElementSections")
                        .HasForeignKey("ElementHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.Report", b =>
                {
                    b.HasOne("Software_Engineering_Assingment.Models.Site", "Site")
                        .WithOne("Report")
                        .HasForeignKey("Software_Engineering_Assingment.Models.Report", "SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Software_Engineering_Assingment.Models.User", "User")
                        .WithOne("Report")
                        .HasForeignKey("Software_Engineering_Assingment.Models.Report", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.ElementHeader", b =>
                {
                    b.Navigation("ElementSections");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.Report", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.Site", b =>
                {
                    b.Navigation("Report");
                });

            modelBuilder.Entity("Software_Engineering_Assingment.Models.User", b =>
                {
                    b.Navigation("Report");
                });
#pragma warning restore 612, 618
        }
    }
}
